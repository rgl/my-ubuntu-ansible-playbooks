- name: Add the argo repository
  kubernetes.core.helm_repository:
    name: argo
    repo_url: https://argoproj.github.io/argo-helm

# NB the default values are described at:
#       https://github.com/argoproj/argo-helm/blob/argo-cd-7.8.9/charts/argo-cd/values.yaml
#    NB make sure you are seeing the same version of the chart that you are installing.
# NB this disables the tls between argocd components, that is, the internal
#    cluster traffic does not uses tls, and only the ingress uses tls.
#    see https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd#ssl-termination-at-ingress-controller
#    see https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/#inbound-tls-options-for-argocd-server
#    see https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/#disabling-tls-to-argocd-repo-server
#    see https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/#disabling-tls-to-argocd-dex-server
# see https://argo-cd.readthedocs.io/en/stable/operator-manual/installation/#helm
- name: Install Argo CD
  kubernetes.core.helm:
    name: argocd
    chart_ref: argo/argo-cd
    chart_version: '{{ kind_argocd_chart_version }}'
    release_namespace: argocd
    create_namespace: true
    update_repo_cache: true
    values:
      global:
        domain: argocd.{{ kind_cluster_name }}.{{ kind_cluster_domain }}
      configs:
        params:
          # disable tls between the argocd components.
          server.insecure: "true"
          server.repo.server.plaintext: "true"
          server.dex.server.plaintext: "true"
          controller.repo.server.plaintext: "true"
          applicationsetcontroller.repo.server.plaintext: "true"
          reposerver.disable.tls: "true"
          dexserver.disable.tls: "true"
      server:
        ingress:
          enabled: true
          tls: true

- name: Create Argo CD Server Certificate
  kubernetes.core.k8s:
    namespace: argocd
    definition:
      # see https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.Certificate
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: argocd-server
      spec:
        subject:
          organizations:
            - '{{ kind_cluster_name }}.{{ kind_cluster_domain }}'
          organizationalUnits:
            - Kubernetes
        commonName: Argo CD Server
        dnsNames:
          - argocd.{{ kind_cluster_name }}.{{ kind_cluster_domain }}
        duration: 1h # NB this is so low for testing purposes.
        privateKey:
          algorithm: ECDSA # NB Ed25519 is not yet supported by chrome 93 or firefox 91.
          size: 256
        secretName: argocd-server-tls
        issuerRef:
          kind: ClusterIssuer
          name: ingress
