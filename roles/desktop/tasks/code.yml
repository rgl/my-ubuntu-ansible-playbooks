# see https://code.visualstudio.com/docs/setup/linux

- name: Add the microsoft apt key
  ansible.builtin.apt_key:
    url: https://packages.microsoft.com/keys/microsoft.asc
    keyring: /etc/apt/keyrings/packages.microsoft.com.gpg

- name: Add the Visual Studio Code repository
  ansible.builtin.apt_repository:
    # see https://wiki.debian.org/DebianRepository/Format
    # see https://packages.microsoft.com/repos/code/dists/stable/Release
    # see https://packages.microsoft.com/repos/code/dists/stable/main/binary-amd64/Packages
    repo: >
      deb
      [arch=amd64 signed-by=/etc/apt/keyrings/packages.microsoft.com.gpg]
      https://packages.microsoft.com/repos/code
      stable
      main
    state: present

- name: Install Visual Studio Code
  ansible.builtin.apt:
    name: code

- name: Configure Visual Studio Code
  become: true
  become_user: '{{ ansible_user }}'
  block:
    - name: Create the Settings Directory
      ansible.builtin.file:
        name: ~/.config/Code/User
        state: directory
        mode: 0755
    - name: Read Settings
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -euxo pipefail
          f=~/.config/Code/User/settings.json
          ([ -f "$f" ] && cat "$f" || echo '{}') | yq \
            --output-format json \
            --prettyPrint \
            --indent 4 \
            e \
              '
                ."telemetry.telemetryLevel" = "off"
              | ."redhat.telemetry.enabled" = false
              | ."[svelte]" = {"editor.defaultFormatter":"svelte.svelte-vscode"}
              '
      register: settings
      changed_when: false
    - name: Write Settings
      ansible.builtin.copy:
        dest: ~/.config/Code/User/settings.json
        content: '{{ settings.stdout }}'
        mode: 0644

- name: Install Zig Extensions dependencies
  ansible.builtin.apt:
    name:
      - gdb

- name: Install code extension
  become: true
  become_user: '{{ ansible_user }}'
  args:
    executable: /bin/bash
  ansible.builtin.shell: "{{ lookup('file', 'install-code-extension.sh') }}"
  environment:
    CODE_EXTENSION_NAME: "{{ item }}"
  register: result
  changed_when: "'ANSIBLE CHANGED NO' not in result.stdout_lines"
  loop:
    # XML.
    # see https://github.com/DotJoshJohnson/vscode-xml
    # see https://marketplace.visualstudio.com/items?itemName=dotjoshjohnson.xml
    - dotjoshjohnson.xml
    # Go language.
    # see https://github.com/golang/vscode-go
    # see https://marketplace.visualstudio.com/items?itemName=golang.Go
    - golang.go
    # HCL.
    # see https://github.com/hashicorp/vscode-hcl
    # see https://marketplace.visualstudio.com/items?itemName=hashicorp.hcl
    - hashicorp.hcl
    # Terraform.
    # see https://github.com/hashicorp/vscode-terraform
    # see https://marketplace.visualstudio.com/items?itemName=hashicorp.terraform
    - hashicorp.terraform
    # Docker.
    # see https://github.com/microsoft/vscode-docker
    # see https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker
    - ms-azuretools.vscode-docker
    # C# language.
    # see https://github.com/dotnet/vscode-csharp
    # see https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csharp
    - ms-dotnettools.csharp
    # Python language.
    # see https://github.com/Microsoft/vscode-python
    # see https://marketplace.visualstudio.com/items?itemName=ms-python.python
    - ms-python.python
    # Remote SSH.
    # see https://github.com/Microsoft/vscode-remote-release
    # see https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh
    - ms-vscode-remote.remote-ssh
    # PowerShell language.
    # see https://github.com/PowerShell/vscode-powershell
    # see https://marketplace.visualstudio.com/items?itemName=ms-vscode.powershell
    - ms-vscode.powershell
    # Makefile Tools.
    # see https://marketplace.visualstudio.com/items?itemName=ms-vscode.makefile-tools
    - ms-vscode.makefile-tools
    # see https://bun.sh/guides/runtime/vscode-debugger
    # see https://marketplace.visualstudio.com/items?itemName=oven.bun-vscode
    - oven.bun-vscode
    # Jinja Template Highlighting.
    # see https://github.com/samuelcolvin/jinjahtml-vscode
    # see https://marketplace.visualstudio.com/items?itemName=samuelcolvin.jinjahtml
    # NB be aware of https://github.com/microsoft/vscode/issues/49210
    - samuelcolvin.jinjahtml
    # Spell checker.
    # see https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker
    - streetsidesoftware.code-spell-checker
    # see https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-portuguese
    - streetsidesoftware.code-spell-checker-portuguese
    # Rust language support.
    # see https://github.com/rust-lang/rust-analyzer
    # see https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer
    - rust-lang.rust-analyzer
    # Zig Language support.
    # see https://github.com/ziglang/vscode-zig
    # see https://marketplace.visualstudio.com/items?itemName=ziglang.vscode-zig
    - ziglang.vscode-zig
    # Zig Language Debugging/Testing support.
    # see https://github.com/ianic/zig-language-extras
    # see https://marketplace.visualstudio.com/items?itemName=ianic.zig-language-extras
    - ianic.zig-language-extras
    # Svelte language support.
    # see https://marketplace.visualstudio.com/items?itemName=svelte.svelte-vscode
    - svelte.svelte-vscode
    # GitHub Actions.
    # see https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-github-actions
    - github.vscode-github-actions
    # Playwright Test.
    # see https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright
    - ms-playwright.playwright
    # PDF Viewer.
    # see https://github.com/tomoki1207/vscode-pdfviewer
    # see https://marketplace.visualstudio.com/items?itemName=tomoki1207.pdf
    - tomoki1207.pdf

- name: Set Visual Studio Code as the text/plain default editor
  become: true
  become_user: '{{ ansible_user }}'
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -euxo pipefail
      expected='code.desktop'
      actual="$(xdg-mime query default text/plain)"
      if [ "$actual" == "$expected" ]; then
        echo 'ANSIBLE CHANGED NO'
      else
        xdg-mime default "$expected" text/plain
      fi
  register: result
  changed_when: "'ANSIBLE CHANGED NO' not in result.stdout_lines"
