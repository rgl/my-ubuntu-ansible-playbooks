- name: Ensure apt-get can use https repositories
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - gnupg

- name: Add the hashicorp apt key
  ansible.builtin.apt_key:
    url: https://apt.releases.hashicorp.com/gpg

# see https://www.vagrantup.com/downloads
- name: Add the hashicorp repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main

# pin the hashicorp repository above the distro ones.
# see apt-cache policy
# see apt-cache policy vagrant
# see apt-cache showpkg vagrant
# see http://manpages.ubuntu.com/manpages/jammy/en/man5/apt_preferences.5.html
- name: Pin the hashicorp apt repository
  ansible.builtin.copy:
    dest: /etc/apt/preferences.d/apt.releases.hashicorp.com.pref
    content: |
      Package: *
      Pin: origin "apt.releases.hashicorp.com"
      Pin-Priority: 999
    mode: 0444

# see https://www.vagrantup.com/downloads
# see https://github.com/hashicorp/vagrant/releases
# NB execute apt-cache madison vagrant to known the available versions.
- name: Install vagrant
  block:
    - name: Install vagrant
      ansible.builtin.apt:
        name: vagrant={{ vagrant_version }}
        allow_change_held_packages: true
      register: vagrant
    - name: Pin vagrant
      ansible.builtin.dpkg_selections:
        name: vagrant
        selection: hold
    # NB after a vagrant upgrade its more reliable to just uninstall all
    #    the plugins and install them again later.
    - name: Uninstall all the plugins
      when: vagrant.changed
      ansible.builtin.command: vagrant plugin expunge --force

- name: Use the system ca certificates
  ansible.builtin.file:
    src: /etc/ssl/certs/ca-certificates.crt
    dest: /opt/vagrant/embedded/cacert.pem
    force: true
    state: link

- name: Install vagrant bash completion
  ansible.builtin.file:
    src: /opt/vagrant/embedded/gems/{{ vagrant_version }}/gems/vagrant-{{ vagrant_version }}/contrib/bash/completion.sh
    dest: /etc/bash_completion.d/vagrant
    force: true
    state: link

- name: Add support for NFS shared folders
  block:
    - name: Install NFS server
      ansible.builtin.apt:
        name: nfs-kernel-server
    # see https://www.vagrantup.com/docs/synced-folders/nfs#root-privilege-requirement
    - name: Enable password-less configuration of the NFS server exports
      ansible.builtin.copy:
        src: vagrant-nfs-synced-folders
        dest: /etc/sudoers.d/vagrant-nfs-synced-folders
        mode: 0400

# see https://github.com/hashicorp/vagrant/pull/9948
- name: Add support for SMB shared folders
  block:
    - name: Patch vagrant to support SMB shared folders
      ansible.posix.patch:
        src: vagrant-smb-9948.patch
        basedir: /opt/vagrant/embedded/gems/{{ vagrant_version }}/gems/vagrant-{{ vagrant_version }}
        strip: 1
    - name: Install Samba
      ansible.builtin.apt:
        name:
          - samba
          - smbclient
    - name: Disable Samba NETBIOS
      block:
        - name: Disable Samba NETBIOS
          community.general.ini_file:
            path: /etc/samba/smb.conf
            section: global
            option: disable netbios
            value: 'yes'
            mode: 0444
          notify: reload samba
        - name: Disable the NETBIOS service
          ansible.builtin.systemd:
            name: nmbd
            enabled: false
            state: stopped
    - name: Set the provision user password
      args:
        executable: /bin/bash
      ansible.builtin.shell: |
        smbpasswd -a -s '{{ provision_username }}' <<'EOF'
        {{ provision_password }}
        {{ provision_password }}
        EOF
      changed_when: false
    - name: Allow user to manage samba shares
      ansible.builtin.user:
        name: "{{ item }}"
        groups: sambashare
        append: true
      loop:
        - '{{ provision_username }}'

- name: Install vagrant plugins
  block:
    - name: Install vagrant plugins dependencies
      ansible.builtin.apt:
        name:
          - build-essential
          - liblzma-dev
          - patch
          - ruby-dev
          - zlib1g-dev

    # NB plugins are local to the user.
    #    see https://github.com/hashicorp/vagrant/issues/12016
    - name: Install vagrant plugin
      args:
        executable: /bin/bash
      ansible.builtin.shell: "{{ lookup('file', 'install-vagrant-plugin.sh') }}"
      environment:
        VAGRANT_PLUGIN_NAME: "{{ item }}"
        VAGRANT_PLUGIN_VERSION: "{{ lookup('vars', (item | replace('-', '_')) + '_plugin_version') }}"
      become_user: '{{ provision_username }}'
      become: true
      register: result
      changed_when: "'ANSIBLE CHANGED NO' not in result.stdout_lines"
      loop:
        - vagrant-reload
        - vagrant-scp
        - vagrant-vsphere
        - vagrant-windows-sysprep

    - name: Install the vagrant-libvirt plugin
      block:
        - name: Install the vagrant-libvirt plugin dependencies
          ansible.builtin.apt:
            name:
              - libvirt-dev
              - gcc
              - make
        - name: Install the vagrant-libvirt plugin
          args:
            executable: /bin/bash
          ansible.builtin.shell: "{{ lookup('file', 'install-vagrant-plugin.sh') }}"
          environment:
            VAGRANT_PLUGIN_NAME: vagrant-libvirt
            VAGRANT_PLUGIN_VERSION: "{{ vagrant_libvirt_plugin_version }}"
            CONFIGURE_ARGS: with-libvirt-include=/usr/include/libvirt with-libvirt-lib=/usr/lib
          become_user: '{{ provision_username }}'
          become: true
          register: result
          changed_when: "'ANSIBLE CHANGED NO' not in result.stdout_lines"
      when: "'kvm' in ansible_virtualization_tech_host"

    - name: Patch vagrant-scp plugin
      block:
        - name: Find vagrant-scp plugin directories
          ansible.builtin.shell: find ~/.vagrant.d/gems -type d -wholename '*/gems/vagrant-scp-{{ vagrant_scp_plugin_version }}'
          changed_when: false
          register: vagrant_scp_plugin_directories
        - name: Patch vagrant-scp plugin
          ansible.posix.patch:
            src: vagrant-scp-48.patch
            basedir: '{{ item }}'
            strip: 1
          loop: '{{ vagrant_scp_plugin_directories.stdout_lines }}'
      become_user: '{{ provision_username }}'
      become: true
