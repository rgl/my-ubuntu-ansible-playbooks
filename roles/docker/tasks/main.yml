- name: Ensure apt-get can use https repositories
  apt:
    name:
      - apt-transport-https
      - gnupg
    state: present

- name: Add the docker apt key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

# see https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-using-the-repository
- name: Add the docker repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

# see https://github.com/moby/moby/releases
# NB execute apt-cache madison docker-ce to known the available versions.
- name: Install docker
  block:
    - name: Install docker
      apt:
        name:
          - docker-ce=5:{{ docker_version }}~*
          - docker-ce-cli=5:{{ docker_version }}~*
        allow_change_held_packages: true
        state: present
    - name: Pin docker
      dpkg_selections:
        name: '{{ item }}'
        selection: hold
      loop:
        - docker-ce
        - docker-ce-cli

- name: Install daemon.json
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
  notify:
    - restart docker

- name: Install docker.service.d directory
  file:
    name: /etc/systemd/system/docker.service.d
    state: directory

- name: Install daemon service override
  copy:
    src: override.conf
    dest: /etc/systemd/system/docker.service.d/override.conf
  notify:
    - restart docker

- name: Allow user to use docker
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  loop:
    - '{{ ansible_user }}'

- name: Install docker-compose
  args:
    executable: /bin/bash
  shell: |
    set -euo pipefail

    # see https://github.com/docker/compose/releases
    docker_compose_version='v{{ docker_compose_version }}'

    # bail when already installed.
    if [ -x /usr/local/lib/docker/cli-plugins/docker-compose ]; then
      actual_version="$(docker compose version | perl -ne '/^Docker Compose version (v.+)/ && print $1')"
      if [ "$actual_version" == "$docker_compose_version" ]; then
        echo 'ANSIBLE CHANGED NO'
        exit 0
      fi
    fi

    # download.
    # see https://github.com/docker/compose/releases
    # see https://docs.docker.com/compose/cli-command/#install-on-linux
    docker_compose_url="https://github.com/docker/compose/releases/download/$docker_compose_version/docker-compose-linux-$(uname -m)"
    t="$(mktemp -q --suffix=.docker-compose)"
    wget -qO "$t" "$docker_compose_url"

    # install.
    install -d /usr/local/lib/docker/cli-plugins
    install -m 555 "$t" /usr/local/lib/docker/cli-plugins/docker-compose
    rm "$t"
  register: result
  changed_when: "'ANSIBLE CHANGED NO' not in result.stdout_lines"
