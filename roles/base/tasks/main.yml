- name: Set hostname
  # skip this task when ansible_host is an IP address.
  when: not (ansible_host | ansible.utils.ipaddr)
  ansible.builtin.hostname:
    name: "{{ ansible_host }}"
    use: systemd

- name: Disable motd-news
  # NB this is sourced from /etc/update-motd.d/50-motd-news
  ansible.builtin.lineinfile:
    path: /etc/default/motd-news
    regexp: '^#?\s*(ENABLED)=.*$'
    line: '\1=0'
    backrefs: true

- name: Add support for the pt_PT locale
  community.general.locale_gen:
    name: pt_PT.UTF-8

# see localectl status
- name: Set the system locale
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -euo pipefail
      before="$(localectl status | perl -n -e '/ ([A-Z_]+=.+)/ && print "$1\n"')"
      localectl set-locale \
        LANG=en_US.UTF-8 \
        LC_NUMERIC=pt_PT.UTF-8 \
        LC_TIME=pt_PT.UTF-8 \
        LC_MONETARY=pt_PT.UTF-8 \
        LC_PAPER=pt_PT.UTF-8 \
        LC_NAME=pt_PT.UTF-8 \
        LC_ADDRESS=pt_PT.UTF-8 \
        LC_TELEPHONE=pt_PT.UTF-8 \
        LC_MEASUREMENT=pt_PT.UTF-8 \
        LC_IDENTIFICATION=pt_PT.UTF-8
      after="$(localectl status | perl -n -e '/ ([A-Z_]+=.+)/ && print "$1\n"')"
      if [ "$before" == "$after" ]; then
        echo 'ANSIBLE CHANGED NO'
      fi
  register: result
  changed_when: "'ANSIBLE CHANGED NO' not in result.stdout_lines"

# see timedatectl status
- name: Set the timezone
  community.general.timezone:
    name: "{{ timezone }}"
  notify:
    - Restart cron

- name: Install vim
  block:
    - name: Install vim
      ansible.builtin.apt:
        name: vim
        install_recommends: false
    - name: Install vimrc
      ansible.builtin.copy:
        src: vimrc.local
        dest: /etc/vim/vimrc.local
        mode: 0444

- name: Install git
  block:
    - name: Install git
      ansible.builtin.apt:
        name: git
        install_recommends: false
    - name: Install gitconfig
      ansible.builtin.copy:
        src: gitconfig
        dest: /etc/gitconfig
        mode: 0444
    - name: Create gitconfig.d directory
      ansible.builtin.file:
        name: /etc/gitconfig.d
        state: directory
        mode: 0755

- name: Install login profile
  ansible.builtin.copy:
    src: login.sh
    dest: /etc/profile.d/login.sh
    mode: 0444

- name: Install libreadline inputrc
  ansible.builtin.copy:
    src: inputrc
    dest: /etc/inputrc
    mode: 0444

- name: Install useful tools
  ansible.builtin.apt:
    name:
      - tcpdump
      - unzip
      - httpie
      - jq
      - python3-tabulate
      - bash-completion
      - p7zip-full
      - patch
      - ncdu
      - screen
      # iso creation tools.
      # NB xorriso is compatible with genisoimage and mkisofs and is also available in msys2 (windows).
      - xorriso
      - mkisofs
      # iso-info tool.
      # NB iso-info is also available in msys2 (windows) as provided by the mingw-w64-x86_64-libcdio package.
      - libcdio-utils
      # etherwake lets us power-on a machine by sending a Wake-on-LAN (WOL)
      # magic packet to its ethernet card.
      # e.g. etherwake -i eth1 00:e0:4c:01:93:a8
      - etherwake
      # arp-scan lets us discover machines in the LAN.
      # e.g. arp-scan --localnet --interface eth0
      - arp-scan
      # xsltproc tool.
      # NB this is required by the libvirt_domain terraform resource to apply
      #    xslt transformations to the libvirt domain xml.
      - xsltproc
    install_recommends: false

- name: Install lm-sensors
  when: ansible_virtualization_role == 'host'
  block:
    - name: Load the drivetemp kernel module on boot
      ansible.builtin.copy:
        dest: /etc/modules-load.d/drivetemp.conf
        content: drivetemp
        mode: 0444
    - name: Load the drivetemp kernel module
      community.general.modprobe:
        name: drivetemp
    - name: Install lm-sensors
      ansible.builtin.apt:
        name: lm-sensors
